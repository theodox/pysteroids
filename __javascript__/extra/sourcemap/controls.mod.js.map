{
	"version": 3,
	"file": "D:/prj/pysteroids/pysteroids/__javascript__/controls.mod.js",
	"sources": [
		"D:/prj/pysteroids/pysteroids/controls.py"
	],
	"sourcesContent": [
		"from utils import clamp\n\nclass Keyboard:\n    def __init__(self):\n        self.keyboard = {0: False}\n        self.handlers = {}\n\n    def key_down(self, key):\n        self.keyboard[key.key] = True\n\n    def key_up(self, key):\n        self.keyboard[key.key] = False\n\n    def get(self, key):\n        return self.keyboard.get(key, False)\n\n    def get_axis(self, key):\n        return self.handlers[key].value\n\n    def add_handler(self, name, handler):\n        self.handlers[name] = handler\n\n    def update(self, interval):\n        for _, eachhandler in self.handlers.items():\n            eachhandler.update(self, interval)\n\n    def clear(self, axis):\n        self.handlers.get(axis).value = 0\n\n\nclass ControlAxis:\n    __pragma__('kwargs')\n\n    def __init__(self, positive_key: str, negative_key: str, attack=1, decay=0, deadzone=0.02):\n        self.positive = positive_key\n        self.negative = negative_key\n        self.attack = attack\n        self.decay = decay\n        self.deadzone = deadzone\n        self.value = 0\n\n    __pragma__('nokwargs')\n\n    def update(self, keyboard: Keyboard, interval: float):\n        self.value -= (interval * self.decay * self.value)\n        dz = abs(self.value) < self.deadzone\n        if keyboard.get(self.positive):\n            dz = False\n            self.value += interval * self.attack\n        if keyboard.get(self.negative):\n            dz = False\n            self.value -= interval * self.attack\n\n        if dz:\n            self.value = 0\n        else:\n            self.value = clamp(self.value, -1, 1)\n"
	],
	"mappings": "AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAIA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA"
}